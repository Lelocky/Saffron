@page "/claims"
@using System.Security.Claims
@using Microsoft.AspNetCore.Components.Authorization
@inject AuthenticationStateProvider AuthenticationStateProvider
@attribute [Authorize]

<PageTitle>Claims</PageTitle>
@*<AuthorizeView Policy="ManagementOnly">*@
<AuthorizeView>
    <Authorized>
        <h3>ClaimsPrincipal Data</h3>

        <button @onclick="GetClaimsPrincipalData">Get ClaimsPrincipal Data</button>

        <p>@_authMessage</p>

        @if (_claims.Count() > 0)
        {
            <ul>
                @foreach (var claim in _claims)
                {
                    <li>@claim.Type: @claim.Value</li>
                }
            </ul>
        }
    </Authorized>
    <NotAuthorized>
        <p>You're not authorized to see this content.</p>
    </NotAuthorized>
</AuthorizeView>

@code {
    private string _authMessage;
 
    private IEnumerable<Claim> _claims = Enumerable.Empty<Claim>();

    private int currentCount = 0;

    private async Task GetClaimsPrincipalData()
    {
        var authState = await AuthenticationStateProvider.GetAuthenticationStateAsync();
        var user = authState.User;

        if (user.Identity.IsAuthenticated)
        {
            _authMessage = $"{user.Identity.Name} is authenticated.";
            _claims = user.Claims;
        }
        else
        {
            _authMessage = "The user is NOT authenticated.";
        }
    }

    private void IncrementCount()
    {
        currentCount++;
    }
}
